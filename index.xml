<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arindam Pradhan</title>
    <link>http://arindampradhan.github.io/</link>
    <description>Recent content on Arindam Pradhan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>All rights reserved - 2015</copyright>
    <atom:link href="http://arindampradhan.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>I am Arindam</title>
      <link>http://arindampradhan.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://arindampradhan.github.io/about/</guid>
      <description>&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;
&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Hi ,I am Arindam Pradhan 20, I live in a small town Bhubaneswar in India. I am an electrical
engineer undergraduate at &lt;a href=&#34;http://cet.edu.in/&#34;&gt;CET,Bhubaneswar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have a keen intrest on FOOS and Competitive Programming. I enjoy programming because it&amp;rsquo;s fun,
keeps me focused and calm. Have a look at my &lt;a href=&#34;https://github.com/arindampradhan&#34;&gt;github&lt;/a&gt;, these are
some of my &lt;em&gt;works&lt;/em&gt;. Currenty I am self teaching, I follow mostly blogs, tutorials and github
projects. I easily get motivated a lot and my dream is to be the best programmer, master a single
language and write lots(tons) of code.&lt;/p&gt;

&lt;p&gt;I am a foodie and love french fries, hell ya I love playing games and try to complete them in a day.
So, I get addicted to lots of caffine and coke. &lt;/p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Contact me&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to get in touch, send &lt;a href=&#34;mailto:arindampradhan10@gmail.com&#34;&gt;an email&lt;/a&gt;.
Arindam is  on &lt;a href=&#34;https://twitter.com/rrindam&#34;&gt;twitter&lt;/a&gt;, &lt;a href=&#34;https://plus.google.
com/+ArindamPradhanIM/&#34;&gt;google+&lt;/a&gt; and posts intresting stuffs. Intrested in doing &lt;em&gt;projects&lt;/em&gt;, you can always
&lt;em&gt;contact me&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Vim</title>
      <link>http://arindampradhan.github.io/introduction-to-vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://arindampradhan.github.io/introduction-to-vim/</guid>
      <description>&lt;p&gt;Well if you are new to vim or linux or a wannabe programmer this post is surely for you. If you google about vim you will get hell of a lot of answers which gets more and more complicated. So, just read the wiki article to get the story. And the moment you start using it you will realize it&amp;rsquo;s not your cup of tea and cannot be jot up in one day.&lt;/p&gt;

&lt;p&gt;First thing first, if you are using windows then don&amp;rsquo;t try to install vim on it because it&amp;rsquo;s more than a Install and an I agree box. It will get way more tougher than you think:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vim is a primarily a terminal based application.&lt;/li&gt;
&lt;li&gt;Vim works best on linux and unix based systems.&lt;/li&gt;
&lt;li&gt;What I meant is, you should use ubuntu or mac osx. Fedora works great too.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;So go to your terminal and type:
&lt;code&gt;sudo apt-get install vim&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apt-get&lt;/code&gt; is for ubuntu&lt;br /&gt;
replace it with &lt;code&gt;yum&lt;/code&gt; if you are using fedora.&lt;/p&gt;

&lt;p&gt;So let me explain you the file structure of vim:&lt;/p&gt;

&lt;p&gt;First of all, after installing you have to manually create a folder called .vim and a file called .vimrc on the Home directory of your machine.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
.	Home
	├── .vim(folder)
	│   └── I keep all the subfolders and important files.
	│   
	└── .vimrc(file)
		└── I am the monster you must understand before using vim
	    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These are dotfiles begins with dot so are hidden in linux. To see them, type &amp;ldquo;Ctrl-h&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Both the &lt;code&gt;.vimrc&lt;/code&gt; file and the &lt;strong&gt;.vim&lt;/strong&gt; folder are used to configure vim editor. Initially you will get a version of vim which will be nothing cooler than a terminal :P.&lt;/p&gt;

&lt;p&gt;In this post I will talk about .vimrc .&lt;/p&gt;

&lt;p&gt;Well vim is a very powerful text editor. So, to maintain it or configure it uses a Language called VimL and can also use other scripting languages too.&lt;/p&gt;

&lt;p&gt;So, copy the following and paste it on your .vimrc.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set number
colorscheme darkblue
abbr teh the
abbr email &amp;lt;your_email@gamil.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open up your vim editor.&lt;/p&gt;

&lt;p&gt;You will see the line numbers in vim and background changed. And type &amp;ldquo;teh&amp;rdquo; a common spelling mistake.You will see them automaticaly get corrected.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t see them, that probably means vim may not be opening .vimrc at startup and you need to manually configure it.
TO check hit  &amp;amp;ltESC&amp;amp;gt :scriptnames.
See if &lt;code&gt;vimrc&lt;/code&gt; is mentioned. If not google about how can you configure vim startups to point to .vimrc. You will probably find a lot of commands and solution online.&lt;/p&gt;

&lt;p&gt;Lets get started with &lt;code&gt;vimrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;##Modes&lt;/p&gt;

&lt;p&gt;Vim works in &lt;strong&gt;three modes&lt;/strong&gt; insert ,visual and normal.&lt;/p&gt;

&lt;p&gt;You can map any command  to the keystrokes in the three modes:
&lt;code&gt;imap,vmap &amp;amp; nmap&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and combo mapping like nnoremap,inoremap and bunch of others.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This shows you the &lt;a href=&#34;http://vim.wikia.com/wiki/Displaying_the_current_Vim_environment&#34;&gt;list&lt;/a&gt; of all the mappings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The commands you type in the vim panel are the same thing you can write in your vimrc file.&lt;/p&gt;

&lt;p&gt;Actually the only thing vim does is runs the file vimrc at the startup.
Hence you see the command above in vimrc can be written through your vim terminal hitting escape like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:colorscheme blue
:set number
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets change a few more things in .vimrc and restart vim.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nnoremap &amp;lt;C-h&amp;gt; :tabprevious&amp;lt;CR&amp;gt;
nnoremap &amp;lt;C-l&amp;gt; :tabnext&amp;lt;CR&amp;gt;
nnoremap &amp;lt;C-t&amp;gt; :tabnew&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In your vim terminal
hit ESC  and write &lt;code&gt;:tabnew&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now in vim hit &lt;code&gt;ctrl-t , ctrl-h , ctrl-l.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check some vimrc &lt;a href=&#34;http://www.dotfiles.org/.vimrc&#34;&gt;vimrc&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now lets source &lt;a href=&#34;http://www.dotfiles.org/~omab/.vimrc&#34;&gt;one&lt;/a&gt; to your .vim. Name it &lt;code&gt;test.vim&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;go to your vimrc:
and add:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;source files
source ~/.vim/test.vim
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;The structure:

.	Home
	├── .vim(folder)
	│   ├── test.vim
	│   └── other files and folders you don&#39;t need to bother.
	└── .vimrc(file)
		└──
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;###Hacks you should try
Check your new vim. Try other configuration too and don&amp;rsquo;t source them all together.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My linux daily apps</title>
      <link>http://arindampradhan.github.io/my-linux-daily-apps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://arindampradhan.github.io/my-linux-daily-apps/</guid>
      <description>

&lt;p&gt;How do you maintain your projects with all the devices and application in a perfect sync? How do you work perfectly in a order that effectively makes your work smoother and easier .Well the answer could be &lt;em&gt;dropbox&lt;/em&gt; but still I am talking about a more synchronized way of doing things on your linux machine.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The zen of workflow for your linux machine&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-should-i-do-things-then:a6b5ee297b3ead4a9234f9bc48abd76c&#34;&gt;How should I do things then?&lt;/h2&gt;

&lt;p&gt;A few apps and settings that can boost your productivity on a daily basis.
But these are mostly ncurses apps &amp;hellip;
Before you use them&amp;hellip; few things you need to learn art.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;##Learn to confgure your linux&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Linux is kind of like a piece of open art. It only
gets beautiful for you the way you paint it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Without further ado&amp;hellip;&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;li&gt;youtube-dl&lt;/li&gt;
&lt;li&gt;cmus&lt;/li&gt;
&lt;li&gt;mplayer&lt;/li&gt;
&lt;li&gt;pyradio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/2_1.png&#34; alt=&#34;advanced_terminal_photo&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;###Advantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mplayer lets you play music through terminal.&lt;/li&gt;
&lt;li&gt;cmus is a ncurses music player&lt;/li&gt;
&lt;li&gt;youtube-dl as name suggests&lt;/li&gt;
&lt;li&gt;tmux is the terminal multiplexer (it lets you create sessions and divides terminal to small screens as shown)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Installation&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install tmux
sudo apt-get install youtube-dl
sudo apt-get install cmus
sudo apt-get install mplayer

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##youtube-dl hacks&lt;/p&gt;

&lt;p&gt;It works great with videos and music files too.&lt;/p&gt;

&lt;p&gt;You can use it to download music from soundcloud and myspace. Well the proper word will be called stream.&lt;/p&gt;

&lt;p&gt;Right click on your song and copy link location and attach the url at the end of youtube-dl on your terminal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/2_2.png&#34; alt=&#34;youtube...soundcloud&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/2_3.png&#34; alt=&#34;youtube...terminal&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/2_4.png&#34; alt=&#34;youtube...myspace&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;It works on myspace too. Cool, no IDM shit any more&amp;hellip; just copy and paste this sucker.&lt;/p&gt;

&lt;p&gt;##Cmus&lt;/p&gt;

&lt;p&gt;Cmus is one of the best ncurses music player you can have.
It comes with tons of functionality ranging from creating playlist, list names by artist to creating queue and music tagging.&lt;/p&gt;

&lt;p&gt;Just hit 1 2 &amp;hellip; and so on, you will see all the views.&lt;/p&gt;

&lt;p&gt;Just to help with to add all the music in a folder you just need the following command:
hit &lt;code&gt;ctrl-C&lt;/code&gt; then  &lt;code&gt;:add ~/Music&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;###Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hit enter to play 
Hit c to stop
Hit e to add to queue
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;This &lt;a href=&#34;https://github.com/cmus/cmus/blob/master/Doc/cmus-tutorial.txt&#34;&gt;tutorial&lt;/a&gt; will give you enough experience.&lt;/p&gt;

&lt;p&gt;Want to know &lt;a href=&#34;http://www.tuxarena.com/static/cmus_guide.php&#34;&gt;more about cmus&lt;/a&gt; about cmus ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And yes _ cmus won&amp;rsquo;t work without mplayer_.So don&amp;rsquo;t forget to install mplayer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mplayer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##Tmux&lt;/p&gt;

&lt;p&gt;Tmux is a longer topic like vim.It has really cool features with ssh and session sharing. I will soon update in another blog post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Heroku Unchained</title>
      <link>http://arindampradhan.github.io/heroku-unchained/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://arindampradhan.github.io/heroku-unchained/</guid>
      <description>&lt;p&gt;I was really excited to try out &lt;em&gt;heroku&lt;/em&gt;, my &lt;em&gt;godaddy&lt;/em&gt; webservice sucked. After enabling ssh, it barely managed to give me python2.6.2. Wish I could try old better web platforms.&lt;/p&gt;

&lt;p&gt;Anyways, I got to find out some hacks wih heroku which I am going to share.&lt;/p&gt;

&lt;p&gt;I will be using django with heroku, post about some ideal settings for heroku that can be used and I found helpful.
Some of the repos I have found helpful &lt;a href=&#34;https://github.com/heroku/heroku-django-template&#34;&gt;heroku_django_app&lt;/a&gt;.
Usually a mini django project format has.
&amp;lt;!&amp;ndash;excerpt&amp;ndash;&amp;gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;your_project
├── db.sqlite3
├── manage.py
├── your_project
│    ├── __init__.py
│    ├── settings.py
│    ├── urls.py
│    └── wsgi.py
└── static
    └── templates
        └── signup.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For &lt;strong&gt;porting&lt;/strong&gt; to heroku you can follow &lt;a href=&#34;https://devcenter.heroku.com/articles/getting-started-with-django&#34;&gt;getting_started&lt;/a&gt;, after that the project might look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;your_project
├── db.sqlite3
├── .git
├── Procfile
├── requirements.txt
├── manage.py
├── your_project
│    ├── __init__.py
│    ├── settings.py
│    ├── urls.py
│    └── wsgi.py
└── static
    └── templates
        └── signup.html

Procfile
web: gunicorn your_project.wsgi --log-file -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After adding the required dynos.
A better &lt;strong&gt;settings&lt;/strong&gt; can be.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;your_project&lt;/code&gt; can be customized for heroku.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;your_project
├── manage.py
├── .git
├── Procfile
├── requirements.txt
├── mvp_landing
│   ├── __init__.py
│   ├── settings
│   │   ├── base.py
│   │   ├── __init__.py
│   │   ├── local.py
│   │   └── production.py
│   ├── settings_old.py
│   ├── urls.py
│   └── wsgi.py
|
|
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Edit the &lt;code&gt;settings.py&lt;/code&gt; file name to &lt;code&gt;settings_old.py&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;settings&lt;/code&gt; directory. Under this directory create base.py, local.py, production.py.&lt;/li&gt;
&lt;li&gt;The base has the the same code as settings.py but a few things differ such as.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    
    BASE_DIR = os.path.dirname(os.path.dirname(__file__))
    to 
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(__file__)))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;__init__.py&lt;/code&gt; file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from .base import *

try:
    from .local import *
    live = False
except:
    live = True

if live:memcached
    from .product import *
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;production.py&lt;/code&gt; files holds the configuration for heroku:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Parse database configuration from $DATABASE_URL
from django.conf import settings
import os
DEBUG = False
TEMPLATE_DEBUG = True

import dj_database_url
DATABASES[&#39;default&#39;] = dj_database_url.config()

# Honor the &#39;X-Forwarded-Proto&#39; header for request.is_secure()
SECURE_PROXY_SSL_HEADER = (&#39;HTTP_X_FORWARDED_PROTO&#39;, &#39;https&#39;)

# Allow all host headers
ALLOWED_HOSTS = [&#39;nameofwebsite.com&#39;,&#39;herokusite.herokuapp.com&#39;]

# # Static asset configuration (Optional
# import os
# BASE_DIR = os.path.dirname(os.path.abspath(__file__))
# STATIC_ROOT = &#39;staticfiles&#39;
# STATIC_URL = &#39;/static/&#39;

# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, &#39;static&#39;),
# )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;local.py&lt;/code&gt; file will hold the configuration for local settings the you want to keep like.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ALLOWED_HOSTS = [&#39;*&#39;]

# Static asset configuration (Optional
import os
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = &#39;staticfiles&#39;
STATIC_URL = &#39;/static/&#39;

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, &#39;static&#39;),
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Heroku is providing lots of services, especially REDIS and MEMCACHED. We can really built minimal cool apps on top of it.
Will soon update new stuffs with heroku. Long live &lt;em&gt;heroku&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PyBelgaum</title>
      <link>http://arindampradhan.github.io/pybelgaum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://arindampradhan.github.io/pybelgaum/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/pybelgaum.png&#34; alt=&#34;pycon&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;For people who don&amp;rsquo;t know, &lt;a href=&#34;http://pybelgaum.org/2015/&#34;&gt;PyBelgaum&lt;/a&gt; 2015 is a local Python conference happening in Belgaum. It is a 2-day conference, conducted by the Python community under &lt;a href=&#34;https://www.python.org/psf/&#34;&gt;PSF&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was a speaker and my talk was on  &lt;a href=&#34;http://junction.pybelgaum.org/pybelgaum/proposals/python-wrapping-a-json-api/&#34;&gt;&lt;strong&gt;Python wrapping a Json API&lt;/strong&gt;&lt;/a&gt;. - &lt;a href=&#34;https://github.com/arindampradhan/wrapping-api-talk&#34;&gt;&lt;strong&gt;slides&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;I traveled &lt;em&gt;1,600 Km for 3 days&lt;/em&gt;. Most of my time went sleeping on trains and buses. It felt like crazy, but I was excited to give a talk on my project.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;talk&lt;/strong&gt; was about &lt;a href=&#34;https://github.com/arindampradhan/yaaHN&#34;&gt;yaaHN&lt;/a&gt; which wraps a simple &lt;a href=&#34;https://github.com/HackerNews/API&#34;&gt;HackerNews API&lt;/a&gt;. It was a beginner talk and I was explaining students about &lt;strong&gt;REST APIs&lt;/strong&gt; and services i.e coursera and hackernews api, how they work. In the end I showed them a &lt;a href=&#34;https://github.com/arindampradhan/mockHN&#34;&gt;app&lt;/a&gt; could be easily written using such APIs. The crowd was cheerful and very supportive.&lt;/p&gt;

&lt;p&gt;Looking back, things have changed. I started learning python a year ago, an electrical major, trying to self-teach python from all kinds of website and opensource projects. Reading code from other people has helped me a lot than reading any books.&lt;/p&gt;

&lt;p&gt;Anyways, back to my schedule :&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;workshops&lt;/strong&gt; I attended:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://junction.pybelgaum.org/pybelgaum/proposals/learn-python-101-workshop/&#34;&gt;Learn Python - 101 Workshop&lt;/a&gt; - Kracekumar Ramaraju&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://junction.pybelgaum.org/pybelgaum/proposals/gotchas-in-python-when-python-gets-slippery-for-you/&#34;&gt;Gotchas in Python - When Python gets slippery for you&lt;/a&gt; - Anand B Pillai&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://junction.pybelgaum.org/pybelgaum/proposals/python-for-generating-network-anomalies/&#34;&gt;Python for Generating Network Anomalies&lt;/a&gt; - Srinivas Naik&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and the &lt;strong&gt;Talks&lt;/strong&gt; I attended:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://junction.pybelgaum.org/pybelgaum/proposals/understanding-pythons-datastructure-dictionary/&#34;&gt;Understanding Python&amp;rsquo;s DataStructure: Dictionary&lt;/a&gt; - Sayan Chowdhury&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://junction.pybelgaum.org/pybelgaum/proposals/ctr-estimation-using-machine-learning-algorithms-in-python/&#34;&gt;CTR estimation using machine learning algorithms in Python&lt;/a&gt; - Rohit singh&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all the talks were great, food was great :D. Loved it, the experience was chilling and my favourite part was attending the workshop&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gotchas in Python - When Python gets slippery for you. It was fun trolling python.&lt;/p&gt;

&lt;p&gt;Usually people love trolling javascript for it&amp;rsquo;s weirdness, but python too gets it wrong at some point :D.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And among talks:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Understanding Python&amp;rsquo;s DataStructure: Dictionary. It was indeed a depth talk on dictionary, how it&amp;rsquo;s key clashes and how to use it for better performance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had a chance to talk to Sayan (great dude who works at Hackerearth, a proud mozillian and a gsoc 13), met him on last year Pycon India. Back then he was explaining me how &lt;strong&gt;opensource&lt;/strong&gt; works. Contributing to opensource projects is fun though. It&amp;rsquo;s hilarious when two PRs clash.&lt;/p&gt;

&lt;p&gt;I actually had a situation where I had to update a PR (reset/revert the previous commit) and another PR got merged at the same time. Unfortunately, both the PRs had a file in common which raised a conflict and due to the force updates there was a diversion in my branch. And finally while fixing it my repo crashed :P. It took me 5hrs to fix it. Haha .. :D&lt;/p&gt;

&lt;p&gt;I will come up with new stories&amp;hellip;stay tuned&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pycon India</title>
      <link>http://arindampradhan.github.io/pycon-india/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://arindampradhan.github.io/pycon-india/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/pycon1.jpg&#34; alt=&#34;pycon&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;This was my first pycon, I was eager to meet some of the greatest minds in the opensource world.
The keynote started with &lt;a href=&#34;https://twitter.com/kushaldas&#34;&gt;Kushal Das&lt;/a&gt;&amp;hellip;and he shared some of his wonderful experiences with python. How he began his journey in his undergraduate years and how some of his projects helped the local community educate using computers.
He has also been a core contributer to a wide variety of upstream projects.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Upstream&lt;/strong&gt; a powerful word I came across.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;my-schedule:507fb2c83b603b6e0e394a44d252d557&#34;&gt;My schedule&lt;/h1&gt;

&lt;p&gt;It&amp;rsquo;s was confusing to decide which talk to attend because they had &lt;strong&gt;&lt;a href=&#34;http://in.pycon.org/2014/schedule.html&#34;&gt;parallel talks&lt;/a&gt;&lt;/strong&gt; running on 2 auditoriums. So, I had to choose.. They all seem very interesting and most of them were 45min talks.&lt;/p&gt;

&lt;p&gt;Without further a do, I decided to go to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/108-python-spark-lightning-fast-cluster-computing&#34;&gt;Python + Spark: Lightning Fast Cluster Computing &lt;/a&gt;
(Jyotiska NK)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/227-django-design-patterns&#34;&gt;Django Design Patterns&lt;/a&gt; (Arun Ravindran)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/207-messing-with-government-data-using-python&#34;&gt;Messing with government data using Python&lt;/a&gt; (Anand Chitipothu)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ya and the lunch was great too.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/253-meet-elasticsearch-my-pet-crunch-monster-directi&#34;&gt;Meet ElasticSearch - My Pet Crunch Monster &lt;/a&gt; (Dhananjay Sathe)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/158-gpu-accelerated-high-performance-computing-primer&#34;&gt;GPU accelerated high performance computing primer
&lt;/a&gt; (Gurajapu Raja Suman)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The most fascinating talk for me was &lt;em&gt;Messing with government data using Python&lt;/em&gt;
&lt;em&gt;- Anand Chitipothu&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have some &lt;em&gt;interest in datamining&lt;/em&gt;.
Mostly I used &lt;em&gt;beautifulsoup and requests&amp;hellip;&lt;/em&gt; to get things done.
Now, I am going to give a shot to &lt;em&gt;scrapy and mechanize&lt;/em&gt;.
They seem to differ as they can trigger things at runtime.&lt;/p&gt;

&lt;p&gt;The talk for elastic search was good too. I am a database newbie. Good to attend some new database stuffs.&lt;/p&gt;

&lt;h1 id=&#34;my-schedule-for-next-day:507fb2c83b603b6e0e394a44d252d557&#34;&gt;My schedule for next day :&lt;/h1&gt;

&lt;p&gt;The keynote for next day started with &lt;a href=&#34;https://twitter.com/voidspace&#34;&gt;voidspace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/pycon3.png&#34; alt=&#34;pycon&#34; /&gt;

&amp;gt; He talked about &lt;a href=&#34;https://golang.org/&#34;&gt;go lang&lt;/a&gt; and his startup &lt;a href=&#34;https://jujucharms.com/&#34;&gt;juju&lt;/a&gt;. And how &lt;em&gt;go error&lt;/em&gt; handling differs from others. I also got a chance to talk to him and asked about opensource projects. He adviced me to search for junior jobs on irc channels and see if I can do them.&lt;/p&gt;

&lt;p&gt;My schedule was exciting for this day:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/186-asyncio-for-dummies&#34;&gt;Async IO for Dummies&lt;/a&gt; (Vajrasky Kok)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/248-building-highly-scalable-web-services-with-gevent-experiences-at-plivo&#34;&gt;Building highly scalable web-services with Gevent - experiences at Plivo
&lt;/a&gt; (Aditya Manthramurthy)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/165-faster-data-processing-in-python&#34;&gt;Faster data processing in Python&lt;/a&gt; (Anand S)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://in.pycon.org/funnel/2014/252-neo4j-and-python-playing-with-graph-data&#34;&gt;Graph everything with Neo4J and Python&lt;/a&gt; (Sonal Raj)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;I loved this day&amp;hellip;I loved Faster data processing in Python
&lt;em&gt;- Anand S&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The talk was very simplistic. Being a newcomer I understood almost everything. The optimization was a benchmark.&lt;/p&gt;

&lt;p&gt;He not only showed ways for faster algorithms, but python libraries to use for faster data processing and also urged people to think whether they need the speed or not.&lt;/p&gt;

&lt;p&gt;He started with a simple program that reads a csv file and formats the required data for votes in a state for the particular year. He explored the data stories visually with Python and basic Javascript.&lt;/p&gt;

&lt;p&gt;He used a basic python code to solve the problem, later he used cpython then pypy @jit to optimize the code. It stared with a runtime of 1.5 millisec in standard python to microsec in cpython and to nanosec in &lt;a href=&#34;http://pypy.org/&#34;&gt;@jit&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;He optimized his code as fluent as one can get in algorithms.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And yes how can I miss to mention this 9yr prodigy who programmes an arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://arindampradhan.github.io/images/pycon2.png&#34; alt=&#34;pycon&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;I will always remember my first pycon.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>